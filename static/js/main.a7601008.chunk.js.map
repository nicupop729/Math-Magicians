{"version":3,"sources":["logic/operate.js","components/Calculator.js","logic/calculate.js","components/Home.js","components/Quote.js","components/NavBar.js","App.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","err","mod","Error","Calculator","useState","total","next","state","setState","handleClick","e","old","obj","buttonName","target","innerText","match","includes","parseFloat","val","className","placeholder","value","readOnly","type","onClick","Home","Quote","NavBar","to","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7601008.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === '×') {\n    return one.times(two).toString();\n  }\n  if (operation === '÷') {\n    try {\n      return one.div(two).toString();\n    } catch (err) {\n      return \"Can't divide by 0.\";\n    }\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React, { useState } from 'react';\nimport './calculator.css';\nimport '../logic/operate';\nimport calculate from '../logic/calculate';\n\nconst Calculator = () => {\n  const [state, setState] = useState({\n    total: 0,\n    next: 0,\n  });\n  const handleClick = (e) => {\n    setState((old) => calculate(old, e.target.innerText));\n  };\n\n  const { total, next } = state;\n  let val = 0;\n  if (next) {\n    val = next;\n  } else if (total) {\n    val = total;\n  }\n\n  return (\n    <div className=\"container\">\n      <input\n        className=\"grid-item display\"\n        placeholder=\"0\"\n        value={val}\n        readOnly\n      />\n      <button type=\"button\" className=\"grid-item AC\" onClick={handleClick}>\n        AC\n      </button>\n      <button\n        type=\"button\"\n        className=\"grid-item operations\"\n        onClick={handleClick}\n      >\n        +/-\n      </button>\n      <button\n        type=\"button\"\n        className=\"grid-item procentage\"\n        onClick={handleClick}\n      >\n        %\n      </button>\n      <button\n        type=\"button\"\n        className=\"grid-item divide operation\"\n        onClick={handleClick}\n      >\n        ÷\n      </button>\n      <button type=\"button\" className=\"grid-item seven\" onClick={handleClick}>\n        7\n      </button>\n      <button type=\"button\" className=\"grid-item eight\" onClick={handleClick}>\n        8\n      </button>\n      <button type=\"button\" className=\"grid-item nine\" onClick={handleClick}>\n        9\n      </button>\n      <button\n        type=\"button\"\n        className=\"grid-item multiply operation\"\n        onClick={handleClick}\n      >\n        ×\n      </button>\n      <button type=\"button\" className=\"grid-item four\" onClick={handleClick}>\n        4\n      </button>\n      <button type=\"button\" className=\"grid-item five\" onClick={handleClick}>\n        5\n      </button>\n      <button type=\"button\" className=\"grid-item six\" onClick={handleClick}>\n        6\n      </button>\n      <button\n        type=\"button\"\n        className=\"grid-item minus operation\"\n        onClick={handleClick}\n      >\n        -\n      </button>\n      <button type=\"button\" className=\"grid-item one\" onClick={handleClick}>\n        1\n      </button>\n      <button type=\"button\" className=\"grid-item two\" onClick={handleClick}>\n        2\n      </button>\n      <button type=\"button\" className=\"grid-item three\" onClick={handleClick}>\n        3\n      </button>\n      <button\n        type=\"button\"\n        className=\"grid-item plus operation\"\n        onClick={handleClick}\n      >\n        +\n      </button>\n      <button type=\"button\" className=\"grid-item zero\" onClick={handleClick}>\n        0\n      </button>\n      <button type=\"button\" className=\"grid-item period\" onClick={handleClick}>\n        .\n      </button>\n      <button\n        type=\"button\"\n        className=\"grid-item equal operation\"\n        onClick={handleClick}\n      >\n        =\n      </button>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { ...obj, next: obj.next + buttonName };\n      }\n      return { ...obj, next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      return {\n        next: obj.next + buttonName,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      if (obj.next.includes('.')) {\n        return { ...obj };\n      }\n      return { ...obj, next: `${obj.next}.` };\n    }\n    if (obj.operation) {\n      return { next: '0.' };\n    }\n    if (obj.total) {\n      if (obj.total.includes('.')) {\n        return {};\n      }\n      return { total: `${obj.total}.` };\n    }\n    return { total: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { ...obj, next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { ...obj, total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation after pressing '='\n  if (!obj.next && obj.total && !obj.operation) {\n    return { ...obj, operation: buttonName };\n  }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    if (obj.total && !obj.next) {\n      return { ...obj, operation: buttonName };\n    }\n\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import './home.css';\n\nconst Home = () => (\n  <div className=\"home\">\n    <h1>Welcome to our page!</h1>\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam sagittis arcu\n      nec leo volutpat posuere. Fusce aliquam vel nibh sed sodales. Sed ut augue\n      suscipit, suscipit neque id, tempor mauris. In laoreet eleifend ligula in\n      rhoncus. Sed ornare rutrum ante, vitae viverra nisl dignissim egestas.\n      Nulla facilisi. Quisque sed nunc tincidunt, ullamcorper leo nec, lacinia\n      turpis. Quisque quam tortor, accumsan interdum gravida sit amet, hendrerit\n      sed augue.\n    </p>\n  </div>\n);\n\nexport default Home;\n","import './quote.css';\n\nconst Quote = () => (\n  <div className=\"quote\">\n    <p>\n      Mathematics is not about numbers, equations, computations or algorithms:\n      it&apos;s about understanding.\n      <br />\n      <strong>- William Paul Thurston</strong>\n    </p>\n  </div>\n);\n\nexport default Quote;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './navbar.css';\n\nconst NavBar = () => (\n  <header className=\"header\">\n    <h1 className=\"nav-title\">Math Magicians</h1>\n    <nav>\n      <ul className=\"nav-list\">\n        <li>\n          <Link to=\"/\" className=\"active-link\">\n            <p>Home</p>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/calc\" className=\"active-link\">\n            <p>Calculator</p>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/quote\" className=\"active-link\">\n            <p>Quote</p>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport './App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport Calculator from './components/Calculator';\nimport Home from './components/Home';\nimport Quote from './components/Quote';\nimport NavBar from './components/NavBar';\n\nconst App = () => (\n  <div className=\"App\">\n    <NavBar />\n    <Routes>\n      <Route exact path=\"/calc\" element={<Calculator />} />\n      <Route exact path=\"/\" element={<Home />} />\n      <Route exact path=\"/quote\" element={<Quote />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}